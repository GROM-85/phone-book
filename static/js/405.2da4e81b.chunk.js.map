{"version":3,"file":"static/js/405.2da4e81b.chunk.js","mappings":"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","sources":["../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useUnmount.js","../node_modules/react-use/esm/useRafState.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useWindowSize.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import { useCallback, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\nvar useRafState = function (initialState) {\n    var frame = useRef(0);\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    var setRafState = useCallback(function (value) {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n            setState(value);\n        });\n    }, []);\n    useUnmount(function () {\n        cancelAnimationFrame(frame.current);\n    });\n    return [state, setRafState];\n};\nexport default useRafState;\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { isBrowser, off, on } from './misc/util';\nvar useWindowSize = function (initialWidth, initialHeight) {\n    if (initialWidth === void 0) { initialWidth = Infinity; }\n    if (initialHeight === void 0) { initialHeight = Infinity; }\n    var _a = useRafState({\n        width: isBrowser ? window.innerWidth : initialWidth,\n        height: isBrowser ? window.innerHeight : initialHeight,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        if (isBrowser) {\n            var handler_1 = function () {\n                setState({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            };\n            on(window, 'resize', handler_1);\n            return function () {\n                off(window, 'resize', handler_1);\n            };\n        }\n    }, []);\n    return state;\n};\nexport default useWindowSize;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (time > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && time <= 0));\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(time);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.6.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.6.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.6.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["effect","useEffect","fn","fnRef","useRef","current","useEffectOnce","initialState","frame","_a","useState","state","setState","setRafState","useCallback","value","cancelAnimationFrame","requestAnimationFrame","useUnmount","isBrowser","window","initialWidth","initialHeight","Infinity","useRafState","width","innerWidth","height","innerHeight","handler_1","obj","args","_i","arguments","length","addEventListener","apply","on","removeEventListener","off","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","cancelTime","calculateDuration","resolvedDuration","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","currentTime","playbackRate","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}